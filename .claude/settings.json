{
  "includeCoAuthoredBy": false,
  "cleanupPeriodDays": 10,
  "outputStyle": "Explanatory",
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "filesystem",
    "memory",
    "fetch"
  ],
  "spinnerTipsEnabled": true,
  "model": "opus",
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); current_dir=$(echo \"$input\" | jq -r '.workspace.current_dir'); if [ \"$current_dir\" = \".\" ]; then current_dir=$(pwd); fi; cd \"$current_dir\" 2>/dev/null; project_name=$(basename \"$current_dir\"); git_info=\"\"; env_info=\"\"; lang_info=\"\"; if [ -d \".git\" ]; then branch=$(git branch --show-current 2>/dev/null || echo 'main'); modified=$(git status --porcelain 2>/dev/null | wc -l | tr -d ' '); if [ \"$modified\" -gt 0 ]; then git_info=\" üî∏$branch +$modified\"; else git_info=\" ‚úÖ$branch\"; fi; fi; if [ -n \"$VIRTUAL_ENV\" ]; then env_info=\" üêç$(basename $VIRTUAL_ENV)\"; elif [ -f \".venv/bin/activate\" ]; then env_info=\" üêç.venv\"; elif [ -f \"venv/bin/activate\" ]; then env_info=\" üêçvenv\"; fi; if [ -f \"package.json\" ]; then node_version=$(node -v 2>/dev/null | cut -d'v' -f2 | cut -d'.' -f1); if [ -n \"$node_version\" ]; then lang_info=\"${lang_info} üì¶node$node_version\"; fi; fi; if [ -f \"requirements.txt\" ] || [ -f \"pyproject.toml\" ] || [ -f \"setup.py\" ]; then py_version=$(python3 --version 2>/dev/null | cut -d' ' -f2 | cut -d'.' -f1,2); if [ -n \"$py_version\" ]; then lang_info=\"${lang_info} üêçpy$py_version\"; fi; fi; if [ -f \"go.mod\" ] || [ -f \"go.sum\" ]; then go_version=$(go version 2>/dev/null | cut -d' ' -f3 | sed 's/go//' | cut -d'.' -f1,2); if [ -n \"$go_version\" ]; then lang_info=\"${lang_info} üêπgo$go_version\"; fi; fi; if [ -f \"Cargo.toml\" ]; then rust_version=$(rustc --version 2>/dev/null | cut -d' ' -f2 | cut -d'.' -f1,2); if [ -n \"$rust_version\" ]; then lang_info=\"${lang_info} ü¶Ärust$rust_version\"; fi; fi; if [ -f \"pom.xml\" ] || [ -f \"build.gradle\" ] || [ -f \"build.gradle.kts\" ]; then java_version=$(java -version 2>&1 | head -n1 | cut -d'\"' -f2 | cut -d'.' -f1); if [ -n \"$java_version\" ]; then if [ \"$java_version\" = \"1\" ]; then java_version=$(java -version 2>&1 | head -n1 | cut -d'\"' -f2 | cut -d'.' -f2); fi; lang_info=\"${lang_info} ‚òïjava$java_version\"; fi; fi; printf \"üìÅ%s%s%s%s\" \"$project_name\" \"$git_info\" \"$env_info\" \"$lang_info\""
  },
  "permissions": {
    "allow": [
      "Bash",
      "Bash(alias nvim)",
      "Bash(rg:*)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg -n \"chdir|cd |nvim_set_current_dir|VimEnter.*cd\" /Users/samuellee/dotfiles/.config/nvim)",
      "Bash(find:*)",
      "Bash(brew list:*)",
      "Bash(mkdir:*)",
      "Bash(uv:*)",
      "Bash(mv:*)",
      "Bash(grep:*)",
      "Bash(npm:*)",
      "Bash(ls:*)",
      "Bash(cd:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(pwd)",
      "Bash(git:*)",
      "Bash(chmod:*)",
      "Bash(touch:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(env)",
      "Bash(pip:*)",
      "Bash(python:*)",
      "Bash(node:*)",
      "Bash(yarn:*)"
    ],
    "deny": []
  },
  "hooks": {}
}
